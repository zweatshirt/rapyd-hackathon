{"ast":null,"code":"var _jsxFileName = \"/Users/rishabh/Documents/Tutorials/rapyd-hackathon/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router-dom';\nimport dotenv from 'dotenv';\nimport { useDispatch } from 'react-redux';\nimport { signin, signup } from '../../actions/auth';\nimport ReactDOM from 'react-dom';\nimport FacebookLogin from 'react-facebook-login';\nconst initialUserState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\nexport const Signup = () => {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [isSignup, setIsSignup] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [formData, setFormData] = useState(initialUserState);\n\n  const handleShowPassword = () => setShowPassword(prevShowPassword => !prevShowPassword);\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  }; // client ID for Google OAuth\n\n\n  dotenv.config({\n    path: 'client/.env'\n  });\n  const client_id = process.env.REACT_APP_CLIENT_ID;\n  const facebook_App_ID = process.env.REACT_APP_FACEBOOK_CLIENT_APP_ID;\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n    console.log(formData);\n  }; // regular sign in button event handler\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (isSignup) dispatch(signup(formData, history));else dispatch(signin(formData, history));\n  }; // Google sign in success and failure event handlers\n\n\n  const googleSuccess = async res => {\n    const profObj = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        'type': 'AUTH',\n        data: {\n          profObj,\n          token\n        }\n      });\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Google sign in failed. Please try again later.\");\n  };\n\n  const responseFacebook = response => {\n    console.log(response);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(LockIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, // only ask for first and last name on sign up\n  isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email\",\n    handleChange: handleChange,\n    half: true,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    half: true,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }), // only ask for password confirmation on signup\n  isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    handleChange: handleChange,\n    half: true,\n    type: showPassword ? \"text\" : \"password\",\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: client_id,\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleBtn,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, \"Google Sign in\") // Once GoogleIcon component is created replace above with:\n    // <Button className={classes.googleBtn}\n    //     color=\"primary\"\n    //     fullWidth onClick={renderProps.onClick}\n    //     disabled={renderProps.disabled} \n    //     startIcon={<GoogleIcon/>} \n    //     variant=\"contained\">                            // </Button>\n    ,\n    onSuccess: googleSuccess,\n    onFailure: googleFailure,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FacebookLogin, {\n    appId: facebook_App_ID,\n    autoLoad: true,\n    fields: \"name,email,picture\" // onClick={componentClicked}\n    ,\n    callback: responseFacebook,\n    icon: \"fa-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, isSignup ? 'Already a guest user? Sign in.' : 'Create an account.'))))));\n};\nexport default Signup;","map":{"version":3,"sources":["/Users/rishabh/Documents/Tutorials/rapyd-hackathon/client/src/components/Auth/Auth.js"],"names":["React","useState","Avatar","Button","Paper","Grid","Typography","Container","LockIcon","Input","GoogleLogin","useStyles","useHistory","dotenv","useDispatch","signin","signup","ReactDOM","FacebookLogin","initialUserState","firstName","lastName","email","password","confirmPassword","Signup","classes","history","dispatch","isSignup","setIsSignup","showPassword","setShowPassword","formData","setFormData","handleShowPassword","prevShowPassword","switchMode","prevIsSignup","config","path","client_id","process","env","REACT_APP_CLIENT_ID","facebook_App_ID","REACT_APP_FACEBOOK_CLIENT_APP_ID","handleChange","e","target","name","value","console","log","handleSubmit","preventDefault","googleSuccess","res","profObj","profileObj","token","tokenId","data","push","error","googleFailure","responseFacebook","response","paper","avatar","form","submit","renderProps","googleBtn","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Avatar, Button, Paper, Grid, Typography, Container} from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport useStyles from './styles';\nimport { useHistory } from 'react-router-dom'\nimport dotenv from 'dotenv';\nimport { useDispatch } from 'react-redux';\nimport { signin, signup } from '../../actions/auth'\nimport ReactDOM from 'react-dom';\nimport FacebookLogin from 'react-facebook-login';\n\n\nconst initialUserState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: ''}\n\nexport const Signup = () => {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const [isSignup, setIsSignup] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [formData, setFormData] = useState(initialUserState);\n\n    const handleShowPassword = () => setShowPassword((prevShowPassword) => !prevShowPassword);\n\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup);\n        setShowPassword(false);\n    }\n\n    // client ID for Google OAuth\n    dotenv.config({ path: 'client/.env' });\n    const client_id = process.env.REACT_APP_CLIENT_ID;\n    const facebook_App_ID = process.env.REACT_APP_FACEBOOK_CLIENT_APP_ID; \n\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n        console.log(formData)\n    }\n\n    // regular sign in button event handler\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (isSignup)\n            dispatch(signup(formData, history));\n        else dispatch(signin(formData, history));\n    }\n\n\n    // Google sign in success and failure event handlers\n    const googleSuccess = async (res) => {\n        const profObj = res?.profileObj;\n        const token = res?.tokenId;\n        try {\n            dispatch({'type': 'AUTH', data: {profObj, token}});\n            history.push('/');\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const googleFailure = (error) => {\n        console.log(error);\n        console.log(\"Google sign in failed. Please try again later.\");\n    }\n\n    const responseFacebook = (response)=>{\n        console.log(response); \n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"sm\">\n            <Paper className={classes.paper} elevation={3}>\n                 <Avatar className={classes.avatar}>\n                    <LockIcon />\n                </Avatar>\n                <Typography variant=\"h5\">{ isSignup ? 'Sign up' : 'Sign in' }</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                        <Grid container spacing={2}>\n                        {   // only ask for first and last name on sign up\n                            isSignup && (\n                                <>\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                                </>\n                            )\n                        }\n                        <Input name=\"email\" label=\"Email\" handleChange={handleChange} half type=\"email\" />\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} half type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                        \n                        {   // only ask for password confirmation on signup\n                            isSignup && (\n                                <>\n                                    <Input name=\"confirmPassword\" label=\"Confirm Password\" handleChange={handleChange} half type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                                </>\n                            )\n                        }\n    \n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        { isSignup ? 'Sign up' : 'Sign in' }\n                    </Button>\n                    <GoogleLogin\n                        clientId={client_id}\n                        render={(renderProps) => (\n                            <Button className={classes.googleBtn}\n                                color=\"primary\"\n                                fullWidth onClick={renderProps.onClick}\n                                disabled={renderProps.disabled}  \n                                variant=\"contained\">\n                                    Google Sign in\n                            </Button>\n                        // Once GoogleIcon component is created replace above with:\n                        // <Button className={classes.googleBtn}\n                        //     color=\"primary\"\n                        //     fullWidth onClick={renderProps.onClick}\n                        //     disabled={renderProps.disabled} \n                        //     startIcon={<GoogleIcon/>} \n                        //     variant=\"contained\">                            // </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n\n                    <FacebookLogin\n                        appId={facebook_App_ID}\n                        autoLoad={true}\n                        fields=\"name,email,picture\"\n                        // onClick={componentClicked}\n                        callback={responseFacebook}\n                        icon=\"fa-facebook\"\n                    />\n\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                { isSignup ? 'Already a guest user? Sign in.' : 'Create an account.' }\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}